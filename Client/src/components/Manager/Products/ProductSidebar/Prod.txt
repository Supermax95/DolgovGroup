  
  ЧАТ Скрытие подкатегорий при повторном выборе
  
  
  const handleCategoryClick = (selectedCategoryId: number) => {
    const isSameCategory = selectedCategoryDataId === selectedCategoryId;

    if (isSameCategory) {
      // Если кликнули на ту же самую категорию, скрываем подкатегории
      setSubcategoryStates({
        ...subcategoryStates,
        [selectedCategoryId]: !subcategoryStates[selectedCategoryId],
      });
    } else {
      const currentCategory = categories.find(
        (category) => category.id === selectedCategoryId
      );
      onSubcategorySelect(null);
      onCategorySelect(currentCategory || null);

      // При выборе новой категории отображаем подкатегории
      setSubcategoryStates({
        ...subcategoryStates,
        [selectedCategoryDataId]: false, // Скрываем подкатегории текущей категории
        [selectedCategoryId]: true, // Отображаем подкатегории новой категории
      });

      setSelectedCategoryDataId(selectedCategoryId);
      setSelectedSubcategoryDataId(0);
    }
  };

  const handleSubcategoryClick = (selectedSubcategory: number) => {
    const isSameSubcategory = selectedSubcategoryDataId === selectedSubcategory;

    if (isSameSubcategory) {
      // Если кликнули на ту же самую подкатегорию, скрываем подкатегории
      setSubcategoryStates({
        ...subcategoryStates,
        [selectedSubcategory]: !subcategoryStates[selectedSubcategory],
      });
    } else {
      const currentSubcategory = allSubcategories.find(
        (sub) => sub.id === selectedSubcategory
      );
      onCategorySelect(null);
      onSubcategorySelect(currentSubcategory || null);

      // При выборе новой подкатегории отображаем подкатегории
      setSubcategoryStates({
        ...subcategoryStates,
        [selectedCategoryDataId]: false, // Скрываем подкатегории текущей категории
        [selectedSubcategory]: true, // Отображаем подкатегории новой подкатегории
      });

      setSelectedCategoryDataId(0);
      setSelectedSubcategoryDataId(selectedSubcategory);
    }
  };